{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../server.service\";\nimport * as i2 from \"@angular/common\";\nfunction ServerComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const server_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.language);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.framework);\n  }\n}\nexport class ServerComponent {\n  constructor(serverService) {\n    this.serverService = serverService;\n    this.servers = [];\n  }\n  ngOnInit() {\n    this.serverService.getServers().subscribe(data => {\n      console.log(data);\n      this.servers = data;\n    });\n  }\n  clearServers() {\n    // Clear the servers array\n    this.servers = [];\n  }\n}\n_class = ServerComponent;\n_class.ɵfac = function ServerComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServerService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-server\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"text-center\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", \"mx-1\"], [1, \"btn\", \"btn-danger\", \"mx-1\"]],\n  template: function ServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Server List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 2)(4, \"thead\")(5, \"tr\")(6, \"th\", 3);\n      i0.ɵɵtext(7, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 3);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 3);\n      i0.ɵɵtext(11, \"Language\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 3);\n      i0.ɵɵtext(13, \"Framework\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 3);\n      i0.ɵɵtext(15, \"Modify\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, ServerComponent_tr_17_Template, 14, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.servers);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","server_r1","id","name","language","framework","ServerComponent","constructor","serverService","servers","ngOnInit","getServers","subscribe","data","console","log","clearServers","ɵɵdirectiveInject","i1","ServerService","selectors","decls","vars","consts","template","ServerComponent_Template","rf","ctx","ɵɵtemplate","ServerComponent_tr_17_Template","ɵɵproperty"],"sources":["D:\\VIT\\Kaiburr\\task4\\kaiburr-app\\src\\app\\server\\server.component.ts","D:\\VIT\\Kaiburr\\task4\\kaiburr-app\\src\\app\\server\\server.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { ServerService } from '../server.service';\nimport { Server } from '../server';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit{\n\n  servers: Server[] = [];\n\n\n  constructor(private serverService: ServerService) {}\n\n  ngOnInit(): void {\n    this.serverService.getServers().subscribe((data: Server[])=>{\n      console.log(data);\n      this.servers = data;\n    })\n  }\n\n  clearServers() {\n    // Clear the servers array\n    this.servers = [];\n  }\n\n}\n","<div class=\"container mt-4\">\n  <h2 class=\"text-center\">Server List</h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Language</th>\n        <th scope=\"col\">Framework</th>\n        <th scope=\"col\">Modify</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- Loop through the 'servers' array and populate table rows -->\n      <tr *ngFor=\"let server of servers\">\n        <td>{{ server.id }}</td>\n        <td>{{ server.name }}</td>\n        <td>{{ server.language }}</td>\n        <td>{{ server.framework }}</td>\n        <td>\n          <!-- Add buttons or actions for modifying the server here -->\n          <button class=\"btn btn-warning mx-1\">Edit</button>\n          <button class=\"btn btn-danger mx-1\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}