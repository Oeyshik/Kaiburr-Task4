{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../server.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nfunction ServerComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ServerComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const server_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openEditDialog(server_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const server_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.language);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.framework);\n  }\n}\nexport class ServerComponent {\n  constructor(serverService, dialog) {\n    this.serverService = serverService;\n    this.dialog = dialog;\n    this.servers = [];\n  }\n  ngOnInit() {\n    this.serverService.getServers().subscribe(data => {\n      console.log(data);\n      this.servers = data;\n    });\n  }\n}\n_class = ServerComponent;\n_class.ɵfac = function ServerComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServerService), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-server\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"text-center\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", \"mx-1\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"mx-1\"]],\n  template: function ServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Server List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 2)(4, \"thead\")(5, \"tr\")(6, \"th\", 3);\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 3);\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 3);\n      i0.ɵɵtext(11, \"Language\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 3);\n      i0.ɵɵtext(13, \"Framework\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 3);\n      i0.ɵɵtext(15, \"Modify\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, ServerComponent_tr_17_Template, 14, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.servers);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ServerComponent_tr_17_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r3","server_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","openEditDialog","ɵɵadvance","ɵɵtextInterpolate","id","name","language","framework","ServerComponent","constructor","serverService","dialog","servers","ngOnInit","getServers","subscribe","data","console","log","ɵɵdirectiveInject","i1","ServerService","i2","MatDialog","selectors","decls","vars","consts","template","ServerComponent_Template","rf","ctx","ɵɵtemplate","ServerComponent_tr_17_Template","ɵɵproperty"],"sources":["D:\\VIT\\Kaiburr\\task4\\kaiburr-app\\src\\app\\server\\server.component.ts","D:\\VIT\\Kaiburr\\task4\\kaiburr-app\\src\\app\\server\\server.component.html"],"sourcesContent":["import { MatDialog } from '@angular/material/dialog';\nimport { EditServerComponent } from '../edit-server/edit-server.component';\nimport { Component,OnInit } from '@angular/core';\nimport { ServerService } from '../server.service';\nimport { Server } from '../server';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit{\n\n  servers: Server[] = [];\n\n\n  constructor(\n    private serverService: ServerService,\n    private dialog: MatDialog\n    ) {}\n\n  ngOnInit(): void {\n    this.serverService.getServers().subscribe((data: Server[])=>{\n      console.log(data);\n      this.servers = data;\n    })\n  }\n}\n","<div class=\"container mt-4\">\n  <h2 class=\"text-center\">Server List</h2>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Language</th>\n        <th scope=\"col\">Framework</th>\n        <th scope=\"col\">Modify</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- Loop through the 'servers' array and populate table rows -->\n      <tr *ngFor=\"let server of servers\">\n        <td>{{ server.id }}</td>\n        <td>{{ server.name }}</td>\n        <td>{{ server.language }}</td>\n        <td>{{ server.framework }}</td>\n        <td>\n          <!-- Add buttons or actions for modifying the server here -->\n          <button class=\"btn btn-warning mx-1\" (click)=\"openEditDialog(server)\">Edit</button>\n          <button class=\"btn btn-danger mx-1\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}