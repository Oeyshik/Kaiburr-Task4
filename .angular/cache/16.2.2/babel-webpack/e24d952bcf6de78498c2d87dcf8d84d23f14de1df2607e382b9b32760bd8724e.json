{"ast":null,"code":"import { Server } from '../server';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../server.service\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"successAlert\"];\nexport let CreateServerComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CreateServerComponent {\n    constructor(dialogRef, serverService) {\n      this.dialogRef = dialogRef;\n      this.serverService = serverService;\n      this.newServer = new Server();\n      this.showSuccessMessage = false;\n    }\n    createServer() {\n      this.serverService.createServer(this.newServer).subscribe(data => {\n        console.log('Server created:', data);\n        // Show the success message\n        this.showSuccessMessage = true;\n        // Close the dialog after a delay\n        setTimeout(() => {\n          this.dialogRef.close();\n        }, 2000); // Close the dialog after 2 seconds (2000 milliseconds)\n      }, error => {\n        console.error('Error creating server:', error);\n        // Handle error cases here if needed\n      });\n    }\n\n    closeDialog() {\n      // Close the dialog without creating a server\n      this.dialogRef.close();\n    }\n  }\n  _class = CreateServerComponent;\n  _class.ɵfac = function CreateServerComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ServerService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-create-server\"]],\n    viewQuery: function CreateServerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.successAlert = _t.first);\n      }\n    },\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"mat-dialog-content\"], [\"serverForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"language\"], [\"type\", \"text\", \"id\", \"language\", \"name\", \"language\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"framework\"], [\"type\", \"text\", \"id\", \"framework\", \"name\", \"framework\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mat-dialog-actions\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"mt-3\", 3, \"hidden\"], [\"successAlert\", \"\"]],\n    template: function CreateServerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Create Server\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", null, 1)(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateServerComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newServer.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateServerComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.newServer.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Language\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateServerComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.newServer.language = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Framework\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateServerComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.newServer.framework = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CreateServerComponent_Template_button_click_22_listener() {\n          return ctx.createServer();\n        });\n        i0.ɵɵtext(23, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CreateServerComponent_Template_button_click_24_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 14, 15);\n        i0.ɵɵtext(28, \" Server Created Successfully\\n\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newServer.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newServer.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newServer.language);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newServer.framework);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !ctx.showSuccessMessage);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".mat-dialog-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:16px}label[_ngcontent-%COMP%]{font-weight:700}input[_ngcontent-%COMP%]{width:100%;padding:8px;border:1px solid #ccc;border-radius:4px;margin-top:4px}.mat-dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-top:16px}button[_ngcontent-%COMP%]{margin:0 8px}\"]\n  });\n  return CreateServerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}